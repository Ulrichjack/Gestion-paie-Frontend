<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Walter Bishop Tech Lab - Machine à Succès</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Courier New', monospace;
            background: linear-gradient(135deg, #0f0f23, #1a1a3a);
            color: #00ff00;
            min-height: 100vh;
            overflow-x: hidden;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
        }

        .startup-modal {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.95);
            display: flex;
            align-items: center;
            justify-content: center;
            z-index: 1000;
            backdrop-filter: blur(10px);
        }

        .startup-content {
            background: linear-gradient(135deg, #1a1a3a, #0f0f23);
            border: 3px solid #00ff00;
            border-radius: 15px;
            padding: 40px;
            text-align: center;
            max-width: 600px;
            box-shadow: 0 0 30px #00ff00;
        }

        .startup-quote {
            font-size: 1.5em;
            color: #ffff00;
            margin-bottom: 20px;
            font-style: italic;
        }

        .startup-author {
            color: #00ff00;
            margin-bottom: 30px;
        }

        .motivation-image {
            width: 150px;
            height: 150px;
            border-radius: 50%;
            border: 3px solid #ffff00;
            margin: 20px auto;
            background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><rect width="100" height="100" fill="%23333"/><text x="50" y="55" text-anchor="middle" fill="%23fff" font-size="12">SUCCESS</text></svg>') center/cover;
        }

        .success-story {
            background: rgba(255, 255, 0, 0.1);
            padding: 15px;
            border-radius: 10px;
            margin: 15px 0;
            border-left: 4px solid #ffff00;
        }

        .phone-warning {
            background: rgba(255, 0, 0, 0.2);
            color: #ff0000;
            padding: 15px;
            border-radius: 10px;
            margin: 20px 0;
            border: 2px solid #ff0000;
            animation: pulse-red 2s infinite;
            font-weight: bold;
            font-size: 1.2em;
        }

        @keyframes pulse-red {
            0% { opacity: 1; transform: scale(1); }
            50% { opacity: 0.7; transform: scale(1.05); }
            100% { opacity: 1; transform: scale(1); }
        }

        .header {
            text-align: center;
            margin-bottom: 30px;
            background: rgba(0, 255, 0, 0.1);
            padding: 20px;
            border-radius: 10px;
            border: 2px solid #00ff00;
        }

        .header h1 {
            font-size: 2.5em;
            margin-bottom: 10px;
            text-shadow: 0 0 10px #00ff00;
        }

        .quote-section {
            background: rgba(255, 255, 0, 0.1);
            border: 2px solid #ffff00;
            border-radius: 10px;
            padding: 15px;
            margin: 20px 0;
            text-align: center;
        }

        .current-quote {
            font-style: italic;
            color: #ffff00;
            font-size: 1.1em;
            margin-bottom: 10px;
        }

        .quote-controls {
            display: flex;
            gap: 10px;
            justify-content: center;
            flex-wrap: wrap;
        }

        .pomodoro-section {
            background: rgba(255, 0, 0, 0.1);
            border: 2px solid #ff6b6b;
            border-radius: 10px;
            padding: 20px;
            margin: 20px 0;
            text-align: center;
        }

        .pomodoro-timer {
            font-size: 3em;
            color: #ff6b6b;
            margin: 15px 0;
            font-weight: bold;
        }

        .pomodoro-controls {
            display: flex;
            gap: 10px;
            justify-content: center;
            flex-wrap: wrap;
        }

        .pomodoro-stats {
            display: flex;
            justify-content: space-around;
            margin-top: 15px;
        }

        .stat-item {
            text-align: center;
        }

        .stat-value {
            font-size: 1.5em;
            color: #ff6b6b;
            font-weight: bold;
        }

        .stat-label {
            color: #ccc;
            font-size: 0.9em;
        }

        .status-bar {
            display: flex;
            justify-content: space-between;
            background: rgba(0, 0, 0, 0.7);
            padding: 15px;
            border-radius: 8px;
            margin-bottom: 30px;
            border: 1px solid #00ff00;
            flex-wrap: wrap;
            gap: 10px;
        }

        .status-item {
            text-align: center;
            flex: 1;
            min-width: 120px;
        }

        .status-label {
            color: #ffff00;
            font-size: 0.9em;
        }

        .status-value {
            color: #00ff00;
            font-size: 1.2em;
            font-weight: bold;
        }

        .domains-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }

        .domain-card {
            background: rgba(0, 0, 0, 0.8);
            border: 2px solid #00ff00;
            border-radius: 10px;
            padding: 20px;
            transition: all 0.3s ease;
            cursor: pointer;
        }

        .domain-card:hover {
            box-shadow: 0 0 20px #00ff00;
            transform: translateY(-5px);
        }

        .domain-card.active {
            border-color: #ffff00;
            box-shadow: 0 0 15px #ffff00;
        }

        .domain-title {
            color: #ffff00;
            font-size: 1.3em;
            margin-bottom: 10px;
            text-align: center;
        }

        .domain-progress {
            background: #333;
            height: 8px;
            border-radius: 4px;
            margin: 10px 0;
            overflow: hidden;
        }

        .progress-bar {
            height: 100%;
            background: linear-gradient(90deg, #00ff00, #ffff00);
            transition: width 0.3s ease;
        }

        .journal-section {
            background: rgba(0, 0, 0, 0.9);
            border: 2px solid #00ff00;
            border-radius: 10px;
            padding: 20px;
            margin: 20px 0;
        }

        .journal-input {
            width: 100%;
            background: rgba(0, 255, 0, 0.1);
            border: 1px solid #00ff00;
            border-radius: 5px;
            padding: 10px;
            color: #00ff00;
            font-family: 'Courier New', monospace;
            resize: vertical;
            min-height: 80px;
        }

        .journal-entries {
            max-height: 200px;
            overflow-y: auto;
            margin-top: 15px;
        }

        .journal-entry {
            background: rgba(0, 255, 0, 0.05);
            border-left: 3px solid #00ff00;
            padding: 10px;
            margin: 5px 0;
            border-radius: 5px;
        }

        .entry-date {
            color: #ffff00;
            font-size: 0.8em;
        }

        .entry-text {
            color: #00ff00;
            margin-top: 5px;
        }

        .btn {
            background: rgba(0, 255, 0, 0.2);
            color: #00ff00;
            border: 1px solid #00ff00;
            padding: 10px 20px;
            border-radius: 5px;
            cursor: pointer;
            transition: all 0.3s ease;
            margin: 5px;
            font-family: 'Courier New', monospace;
        }

        .btn:hover {
            background: #00ff00;
            color: #000;
        }

        .btn-danger {
            background: rgba(255, 0, 0, 0.2);
            color: #ff0000;
            border-color: #ff0000;
        }

        .btn-danger:hover {
            background: #ff0000;
            color: #fff;
        }

        .btn-warning {
            background: rgba(255, 255, 0, 0.2);
            color: #ffff00;
            border-color: #ffff00;
        }

        .btn-warning:hover {
            background: #ffff00;
            color: #000;
        }

        .hidden {
            display: none;
        }

        .quote-input {
            width: 100%;
            background: rgba(255, 255, 0, 0.1);
            border: 1px solid #ffff00;
            border-radius: 5px;
            padding: 8px;
            color: #ffff00;
            font-family: 'Courier New', monospace;
            margin: 5px 0;
        }

        .saved-quotes {
            max-height: 150px;
            overflow-y: auto;
            margin-top: 10px;
        }

        .quote-item {
            background: rgba(255, 255, 0, 0.05);
            border-left: 3px solid #ffff00;
            padding: 8px;
            margin: 3px 0;
            border-radius: 3px;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .delete-quote {
            background: rgba(255, 0, 0, 0.3);
            color: #ff0000;
            border: 1px solid #ff0000;
            border-radius: 3px;
            padding: 2px 6px;
            cursor: pointer;
            font-size: 0.8em;
        }

        @media (max-width: 768px) {
            .container {
                padding: 10px;
            }

            .header h1 {
                font-size: 1.8em;
            }

            .pomodoro-timer {
                font-size: 2em;
            }

            .startup-content {
                padding: 20px;
                margin: 20px;
            }
        }
    </style>
</head>
<body>
    <!-- Modal de démarrage -->
    <div class="startup-modal" id="startupModal">
        <div class="startup-content">
            <h2 style="color: #00ff00; margin-bottom: 20px;">🧪 WALTER BISHOP TECH LAB 🧪</h2>
            <div class="startup-quote" id="startupQuote">Loading...</div>
            <div class="startup-author" id="startupAuthor">- Walter Bishop</div>

            <div class="motivation-image"></div>

            <div class="success-story">
                <strong style="color: #ffff00;">💡 Success Story:</strong>
                <p style="color: #ccc; margin-top: 10px;">
                    "Bill Gates programmait 8h par jour à 13 ans. Elon Musk lisait des encyclopédies entières.
                    La discipline transforme les rêves en réalité."
                </p>
            </div>

            <div class="phone-warning">
                📱 ÉTEINT TON TÉLÉPHONE MAINTENANT ! 📱
            </div>

            <button class="btn" onclick="closeStartupModal()">Commencer ma Session</button>
        </div>
    </div>

    <div class="container">
        <div class="header">
            <h1>🧪 WALTER BISHOP TECH LAB 🧪</h1>
            <div class="subtitle" style="color: #ffff00; font-size: 1.2em;">"Science is the Gateway to Understanding Everything"</div>
        </div>

        <!-- Section Citations -->
        <div class="quote-section">
            <div class="current-quote" id="currentQuote">La science ouvre toutes les portes de la compréhension</div>
            <div class="quote-controls">
                <button class="btn btn-warning" onclick="showQuoteManager()">Gérer mes Citations</button>
                <button class="btn" onclick="changeQuote()">Nouvelle Citation</button>
            </div>

            <div id="quoteManager" class="hidden" style="margin-top: 15px;">
                <input type="text" class="quote-input" id="newQuote" placeholder="Ta citation motivante...">
                <input type="text" class="quote-input" id="newAuthor" placeholder="Auteur (optionnel)">
                <button class="btn" onclick="addCustomQuote()">Ajouter</button>
                <div class="saved-quotes" id="savedQuotes"></div>
            </div>
        </div>

        <!-- Section Pomodoro -->
        <div class="pomodoro-section">
            <h3 style="color: #ff6b6b; margin-bottom: 15px;">🍅 POMODORO FOCUS</h3>
            <div class="pomodoro-timer" id="pomodoroTimer">25:00</div>
            <div style="color: #ccc; margin-bottom: 15px;" id="pomodoroStatus">Mode: Travail (25min)</div>

            <div class="pomodoro-controls">
                <button class="btn btn-danger" onclick="startPomodoro()">Démarrer Focus</button>
                <button class="btn" onclick="pausePomodoro()">Pause</button>
                <button class="btn" onclick="resetPomodoro()">Reset</button>
            </div>

            <div class="pomodoro-stats">
                <div class="stat-item">
                    <div class="stat-value" id="pomodorosToday">0</div>
                    <div class="stat-label">Pomodoros Aujourd'hui</div>
                </div>
                <div class="stat-item">
                    <div class="stat-value" id="focusStreak">0</div>
                    <div class="stat-label">Série de Focus</div>
                </div>
                <div class="stat-item">
                    <div class="stat-value" id="totalFocusTime">0h</div>
                    <div class="stat-label">Temps Total Focus</div>
                </div>
            </div>
        </div>

        <div class="status-bar">
            <div class="status-item">
                <div class="status-label">Jours jusqu'au travail</div>
                <div class="status-value" id="countdown">Calcul...</div>
            </div>
            <div class="status-item">
                <div class="status-label">Niveau Global</div>
                <div class="status-value" id="global-level">Apprenti</div>
            </div>
            <div class="status-item">
                <div class="status-label">Expériences complétées</div>
                <div class="status-value" id="experiments-done">0</div>
            </div>
            <div class="status-item">
                <div class="status-label">Streak Quotidien</div>
                <div class="status-value" id="daily-streak">0 jours</div>
            </div>
        </div>

        <div class="domains-grid">
            <div class="domain-card" onclick="selectDomain('arduino')">
                <div class="domain-title">🔧 Arduino & Systèmes Embarqués</div>
                <div class="domain-progress">
                    <div class="progress-bar" style="width: 25%"></div>
                </div>
                <div style="color: #ccc; font-size: 0.9em;">Création de projets hardware/software</div>
            </div>

            <div class="domain-card" onclick="selectDomain('cybersec')">
                <div class="domain-title">🛡️ CyberSecurity</div>
                <div class="domain-progress">
                    <div class="progress-bar" style="width: 15%"></div>
                </div>
                <div style="color: #ccc; font-size: 0.9em;">Ethical hacking, cryptographie, sécurité</div>
            </div>

            <div class="domain-card" onclick="selectDomain('java')">
                <div class="domain-title">☕ Java & Spring Boot</div>
                <div class="domain-progress">
                    <div class="progress-bar" style="width: 40%"></div>
                </div>
                <div style="color: #ccc; font-size: 0.9em;">Backend, APIs REST, microservices</div>
            </div>

            <div class="domain-card" onclick="selectDomain('webdev')">
                <div class="domain-title">🌐 Web Development</div>
                <div class="domain-progress">
                    <div class="progress-bar" style="width: 30%"></div>
                </div>
                <div style="color: #ccc; font-size: 0.9em;">Bootstrap, Frontend moderne</div>
            </div>

            <div class="domain-card" onclick="selectDomain('english')">
                <div class="domain-title">🗣️ English Mastery</div>
                <div class="domain-progress">
                    <div class="progress-bar" style="width: 20%"></div>
                </div>
                <div style="color: #ccc; font-size: 0.9em;">Tech vocabulary, documentation</div>
            </div>
        </div>

        <!-- Journal Personnel -->
        <div class="journal-section">
            <h3 style="color: #00ff00; margin-bottom: 15px;">📝 Journal de Laboratoire</h3>
            <textarea class="journal-input" id="journalInput" placeholder="Qu'est-ce que tu as appris aujourd'hui ? Écris juste l'essentiel..."></textarea>
            <button class="btn" onclick="saveJournalEntry()">Sauvegarder l'Entrée</button>

            <div class="journal-entries" id="journalEntries">
                <!-- Les entrées apparaîtront ici -->
            </div>
        </div>
    </div>

    <script>
        // Variables globales
        let currentDomain = null;
        let customQuotes = [];
        let journalEntries = [];
        let pomodoroTimer = null;
        let pomodoroSeconds = 25 * 60; // 25 minutes
        let isWorking = true;
        let pomodorosCompleted = 0;
        let experimentsCompleted = 0;

        // Citations prédéfinies
        const defaultQuotes = [
            { text: "The universe is big, vast, complicated and ridiculous", author: "Walter Bishop" },
            { text: "Science is about taking risks, testing limits", author: "Walter Bishop" },
            { text: "Your limitation—it's only your imagination", author: "Anonymous" },
            { text: "Great things never come from comfort zones", author: "Anonymous" },
            { text: "Don't stop when you're tired. Stop when you're done", author: "Anonymous" },
            { text: "Success is the sum of small efforts repeated day in and day out", author: "Robert Collier" },
            { text: "The expert in anything was once a beginner", author: "Anonymous" },
            { text: "Code is like humor. When you have to explain it, it's bad", author: "Cory House" },
            { text: "Learning never exhausts the mind", author: "Leonardo da Vinci" },
            { text: "La discipline est le pont entre les objectifs et l'accomplissement", author: "Jim Rohn" }
        ];

        // Défis par domaine et mode
        const challenges = {
            arduino: {
                pomodoro: [
                    "Program a servo motor with precise angle control",
                    "Create a temperature monitoring system with alerts",
                    "Build a motion sensor security system",
                    "Design an automatic plant watering system",
                    "Program an LCD display with real-time data"
                ]
            },
            cybersec: {
                pomodoro: [
                    "Study SQL injection techniques and prevention",
                    "Learn about network scanning with Nmap",
                    "Research the latest CVE vulnerabilities",
                    "Practice password cracking techniques ethically",
                    "Understand encryption algorithms implementation"
                ]
            },
            java: {
                pomodoro: [
                    "Build a REST API endpoint with Spring Boot",
                    "Implement user authentication with JWT",
                    "Create exception handling for a web service",
                    "Design a database connection with JPA",
                    "Practice Java design patterns implementation"
                ]
            },
            webdev: {
                pomodoro: [
                    "Create a responsive layout with CSS Grid",
                    "Build an interactive form with JavaScript validation",
                    "Implement API calls with fetch() or Ajax",
                    "Design a mobile-first responsive website",
                    "Practice Bootstrap components and utilities"
                ]
            },
            english: {
                pomodoro: [
                    "Read technical documentation for 25 minutes",
                    "Watch a programming tutorial without subtitles",
                    "Practice explaining code concepts in English",
                    "Learn 20 new technical terms with definitions",
                    "Write a technical summary in English"
                ]
            }
        };

        // Initialisation
        window.onload = function() {
            loadSavedData();
            showStartupModal();
            updateCountdown();
            updateJournalDisplay();
            updateQuotesDisplay();
            setInterval(updateCountdown, 60000);
        };

        // Gestion du modal de démarrage
        function showStartupModal() {
            const allQuotes = [...defaultQuotes, ...customQuotes];
            const randomQuote = allQuotes[Math.floor(Math.random() * allQuotes.length)];

            document.getElementById('startupQuote').textContent = `"${randomQuote.text}"`;
            document.getElementById('startupAuthor').textContent = `- ${randomQuote.author}`;
            document.getElementById('startupModal').style.display = 'flex';
        }

        function closeStartupModal() {
            document.getElementById('startupModal').style.display = 'none';
            changeQuote(); // Affiche une nouvelle citation
        }

        // Gestion des citations
        function changeQuote() {
            const allQuotes = [...defaultQuotes, ...customQuotes];
            const randomQuote = allQuotes[Math.floor(Math.random() * allQuotes.length)];
            document.getElementById('currentQuote').textContent = `"${randomQuote.text}" - ${randomQuote.author}`;
        }

        function showQuoteManager() {
            const manager = document.getElementById('quoteManager');
            manager.classList.toggle('hidden');
            if (!manager.classList.contains('hidden')) {
                updateQuotesDisplay();
            }
        }

        function addCustomQuote() {
            const quoteText = document.getElementById('newQuote').value.trim();
            const author = document.getElementById('newAuthor').value.trim() || 'Moi';

            if (quoteText) {
                customQuotes.push({ text: quoteText, author: author });
                document.getElementById('newQuote').value = '';
                document.getElementById('newAuthor').value = '';
                updateQuotesDisplay();
                saveData();
            }
        }

        function deleteQuote(index) {
            customQuotes.splice(index, 1);
            updateQuotesDisplay();
            saveData();
        }

        function updateQuotesDisplay() {
            const container = document.getElementById('savedQuotes');
            container.innerHTML = '';

            customQuotes.forEach((quote, index) => {
                const div = document.createElement('div');
                div.className = 'quote-item';
                div.innerHTML = `
                    <span>"${quote.text}" - ${quote.author}</span>
                    <button class="delete-quote" onclick="deleteQuote(${index})">×</button>
                `;
                container.appendChild(div);
            });
        }

        // Gestion du Pomodoro
        function startPomodoro() {
            if (pomodoroTimer) return;

            pomodoroTimer = setInterval(() => {
                pomodoroSeconds--;
                updatePomodoroDisplay();

                if (pomodoroSeconds <= 0) {
                    completePomodoroSession();
                }
            }, 1000);
        }

        function pausePomodoro() {
            if (pomodoroTimer) {
                clearInterval(pomodoroTimer);
                pomodoroTimer = null;
            }
        }

        function resetPomodoro() {
            pausePomodoro();
            pomodoroSeconds = isWorking ? 25 * 60 : 5 * 60;
            updatePomodoroDisplay();
        }

        function completePomodoroSession() {
            pausePomodoro();

            if (isWorking) {
                // Session de travail terminée
                pomodorosCompleted++;
                experimentsCompleted++;
                isWorking = false;
                pomodoroSeconds = 5 * 60; // 5 minutes de pause

                // Afficher citation motivante
                setTimeout(() => {
                    alert('🎉 Pomodoro terminé ! 5 minutes de pause. ' + getMotivationalMessage());
                    changeQuote();
                }, 100);
            } else {
                // Pause terminée
                isWorking = true;
                pomodoroSeconds = 25 * 60; // Retour au travail
                alert('⚡ Pause terminée ! Retour au focus total !');
            }

            updatePomodoroDisplay();
            updateStats();
            saveData();
        }

        function updatePomodoroDisplay() {
            const minutes = Math.floor(pomodoroSeconds / 60);
            const seconds = pomodoroSeconds % 60;
            const timeString = `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;

            document.getElementById('pomodoroTimer').textContent = timeString;
            document.getElementById('pomodoroStatus').textContent =
                `Mode: ${isWorking ? 'Travail (25min)' : 'Pause (5min)'}`;
        }

        function getMotivationalMessage() {
            const messages = [
                "Walter serait fier de toi !",
                "Tu deviens plus fort à chaque session !",
                "La discipline forge les génies !",
                "Chaque pomodoro te rapproche du succès !",
                "Tu es en train de reprogrammer ton cerveau !"
            ];
            return messages[Math.floor(Math.random() * messages.length)];
        }

        // Gestion du journal
        function saveJournalEntry() {
            const text = document.getElementById('journalInput').value.trim();
            if (text) {
                const entry = {
                    date: new Date().toLocaleDateString('fr-FR'),
                    time: new Date().toLocaleTimeString('fr-FR', { hour: '2-digit', minute: '2-digit' }),
                    text: text,
                    domain: currentDomain || 'Général'
                };

                journalEntries.unshift(entry); // Ajouter au début
                document.getElementById('journalInput').value = '';
                updateJournalDisplay();
                saveData();
            }
        }

        function updateJournalDisplay() {
            const container = document.getElementById('journalEntries');
            container.innerHTML = '';

            journalEntries.slice(0, 10).forEach(entry => { // Afficher les 10 dernières
                const div = document.createElement('div');
                div.className = 'journal-entry';
                div.innerHTML = `
                    <div class="entry-date">${entry.date} - ${entry.time} - ${entry.domain}</div>
                    <div class="entry-text">${entry.text}</div>
                `;
                container.appendChild(div);
            });
        }

        // Sélection de domaine
        function selectDomain(domain) {
            currentDomain = domain;
            document.querySelectorAll('.domain-card').forEach(card => card.classList.remove('active'));
            event.target.closest('.domain-card').classList.add('active');

            // Générer un défi pour ce domaine
            if (challenges[domain] && challenges[domain].pomodoro) {
                const domainChallenges = challenges[domain].pomodoro
            }
          }
          function selectDomain(domain) {
            currentDomain = domain;
            document.querySelectorAll('.domain-card').forEach(card => card.classList.remove('active'));
            event.target.closest('.domain-card').classList.add('active');

            // Générer un défi pour ce domaine
            if (challenges[domain] && challenges[domain].pomodoro) {
                const domainChallenges = challenges[domain].pomodoro;
                const randomChallenge = domainChallenges[Math.floor(Math.random() * domainChallenges.length)];

                setTimeout(() => {
                    alert(`🎯 Défi ${domain.toUpperCase()}: ${randomChallenge}`);
                }, 500);
            }

            updateDomainFocus(domain);
        }

        function updateDomainFocus(domain) {
            // Mettre à jour l'affichage du domaine sélectionné
            const domainNames = {
                arduino: 'Arduino & Systèmes Embarqués',
                cybersec: 'CyberSecurity',
                java: 'Java & Spring Boot',
                webdev: 'Web Development',
                english: 'English Mastery'
            };

            // Afficher le domaine actuel dans le statut
            document.getElementById('pomodoroStatus').textContent =
                `Mode: ${isWorking ? 'Travail' : 'Pause'} - ${domainNames[domain] || 'Général'}`;
        }

        // Mise à jour du compte à rebours
        function updateCountdown() {
            const targetDate = new Date();
            targetDate.setMonth(targetDate.getMonth() + 6); // 6 mois dans le futur

            const now = new Date();
            const difference = targetDate - now;
            const days = Math.ceil(difference / (1000 * 60 * 60 * 24));

            document.getElementById('countdown').textContent = `${days} jours`;
        }

        // Mise à jour des statistiques
        function updateStats() {
            // Mettre à jour les statistiques Pomodoro
            document.getElementById('pomodorosToday').textContent = pomodorosCompleted;
            document.getElementById('focusStreak').textContent = Math.floor(pomodorosCompleted / 4); // Série tous les 4 pomodoros
            document.getElementById('totalFocusTime').textContent = `${Math.floor(pomodorosCompleted * 25 / 60)}h${(pomodorosCompleted * 25) % 60}m`;

            // Mettre à jour les expériences
            document.getElementById('experiments-done').textContent = experimentsCompleted;

            // Calculer le niveau global
            let level = 'Apprenti';
            if (experimentsCompleted >= 50) level = 'Expert';
            else if (experimentsCompleted >= 25) level = 'Avancé';
            else if (experimentsCompleted >= 10) level = 'Intermédiaire';

            document.getElementById('global-level').textContent = level;

            // Calculer le streak quotidien
            const today = new Date().toDateString();
            const lastActiveDate = localStorage.getItem('lastActiveDate');
            let streak = parseInt(localStorage.getItem('dailyStreak') || '0');

            if (lastActiveDate !== today) {
                if (lastActiveDate === new Date(Date.now() - 86400000).toDateString()) {
                    // Hier, continuer le streak
                    streak++;
                } else {
                    // Plus d'un jour, reset
                    streak = 1;
                }
                localStorage.setItem('lastActiveDate', today);
                localStorage.setItem('dailyStreak', streak.toString());
            }

            document.getElementById('daily-streak').textContent = `${streak} jours`;
        }

        // Gestion de la sauvegarde
        function saveData() {
            const data = {
                customQuotes: customQuotes,
                journalEntries: journalEntries,
                pomodorosCompleted: pomodorosCompleted,
                experimentsCompleted: experimentsCompleted,
                currentDomain: currentDomain,
                lastSaveDate: new Date().toISOString()
            };

            localStorage.setItem('walterBishopLabData', JSON.stringify(data));
        }

        function loadSavedData() {
            try {
                const saved = localStorage.getItem('walterBishopLabData');
                if (saved) {
                    const data = JSON.parse(saved);
                    customQuotes = data.customQuotes || [];
                    journalEntries = data.journalEntries || [];
                    pomodorosCompleted = data.pomodorosCompleted || 0;
                    experimentsCompleted = data.experimentsCompleted || 0;
                    currentDomain = data.currentDomain || null;

                    updateStats();
                }
            } catch (error) {
                console.log('Erreur lors du chargement des données:', error);
            }
        }

        // Fonctions utilitaires
        function playNotificationSound() {
            // Son de notification simple
            const audioContext = new (window.AudioContext || window.webkitAudioContext)();
            const oscillator = audioContext.createOscillator();
            const gainNode = audioContext.createGain();

            oscillator.connect(gainNode);
            gainNode.connect(audioContext.destination);

            oscillator.frequency.value = 800;
            oscillator.type = 'sine';

            gainNode.gain.setValueAtTime(0.3, audioContext.currentTime);
            gainNode.gain.exponentialRampToValueAtTime(0.01, audioContext.currentTime + 0.5);

            oscillator.start(audioContext.currentTime);
            oscillator.stop(audioContext.currentTime + 0.5);
        }

        // Messages motivationnels spéciaux
        function getWalterBishopQuote() {
            const walterQuotes = [
                "The universe is not only stranger than we imagine, it's stranger than we can imagine!",
                "Science is about taking risks, testing conventional wisdom.",
                "I've always believed that scientific breakthroughs come from thinking outside the box.",
                "The impossible is just an opinion, and opinions can be wrong.",
                "Every solution breeds new problems. That's the beauty of science!"
            ];

            return walterQuotes[Math.floor(Math.random() * walterQuotes.length)];
        }

        // Export des données (fonction bonus)
        function exportJournal() {
            const data = {
                exportDate: new Date().toISOString(),
                stats: {
                    pomodorosCompleted: pomodorosCompleted,
                    experimentsCompleted: experimentsCompleted,
                    level: document.getElementById('global-level').textContent,
                    streak: document.getElementById('daily-streak').textContent
                },
                journalEntries: journalEntries,
                customQuotes: customQuotes
            };

            const blob = new Blob([JSON.stringify(data, null, 2)], { type: 'application/json' });
            const url = URL.createObjectURL(blob);
            const a = document.createElement('a');
            a.href = url;
            a.download = `walter-bishop-lab-${new Date().toISOString().split('T')[0]}.json`;
            a.click();
            URL.revokeObjectURL(url);
        }

        // Raccourcis clavier
        document.addEventListener('keydown', function(e) {
            // Ctrl + Space pour démarrer/pause le pomodoro
            if (e.ctrlKey && e.code === 'Space') {
                e.preventDefault();
                if (pomodoroTimer) {
                    pausePomodoro();
                } else {
                    startPomodoro();
                }
            }

            // Ctrl + Q pour nouvelle citation
            if (e.ctrlKey && e.key === 'q') {
                e.preventDefault();
                changeQuote();
            }

            // Ctrl + J pour focus sur le journal
            if (e.ctrlKey && e.key === 'j') {
                e.preventDefault();
                document.getElementById('journalInput').focus();
            }
        });

        // Notification de focus/pause automatique
        function checkFocusTime() {
            const focusWarnings = [
                "💡 Walter dit: Reste concentré, la science demande de l'attention !",
                "🧪 N'oublie pas de faire des pauses régulières pour optimiser ton cerveau !",
                "⚡ Tu es en train de créer de nouvelles connexions neuronales !",
                "🔬 Chaque minute de focus te rapproche du génie scientifique !"
            ];

            // Afficher un message motivant toutes les 30 minutes de travail
            if (pomodorosCompleted > 0 && pomodorosCompleted % 2 === 0) {
                const message = focusWarnings[Math.floor(Math.random() * focusWarnings.length)];
                setTimeout(() => {
                    if (confirm(message + "\n\nVeux-tu voir une citation de Walter Bishop ?")) {
                        alert(`"${getWalterBishopQuote()}" - Walter Bishop`);
                    }
                }, 1000);
            }
        }

        // Gestion de la visibilité de la page (pause auto si on change d'onglet)
        document.addEventListener('visibilitychange', function() {
            if (document.hidden && pomodoroTimer) {
                // L'utilisateur a changé d'onglet pendant un pomodoro
                setTimeout(() => {
                    if (document.hidden && pomodoroTimer) {
                        pausePomodoro();
                        alert("⚠️ Pomodoro mis en pause - Tu as quitté l'onglet ! Reste concentré !");
                    }
                }, 5000); // 5 secondes de délai
            }
        });

        // Auto-sauvegarde toutes les 2 minutes
        setInterval(saveData, 120000);

        // Message de bienvenue dans la console
        console.log(`
        🧪 WALTER BISHOP TECH LAB 🧪
        ============================
        Raccourcis clavier:
        - Ctrl + Space: Start/Pause Pomodoro
        - Ctrl + Q: Nouvelle citation
        - Ctrl + J: Focus journal

        "Science is the gateway to understanding everything!" - Walter Bishop
        `);

    </script>
</body>
</html>
